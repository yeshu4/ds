library(readr)
library(dplyr)
library(randomForest)
library(ggplot2)
library(Hmisc)
library(party)
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
glimpse(creditData)
table(creditData$Class)
View(credi)
View(creditData)
creditData$Class <- as.factor(creditData$Class)
train <- creditData[1:150000, ]
test <- creditData[150001:284807, ]
train %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
#count of class in train set
test %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
rfModel <- randomForest(Class ~ . , data = train)
creditData[-c(21:75),] -> creditData1
View(creditData1)
creditData[-c(32:204),] -> creditData1
library(readr)
library(dplyr)
library(randomForest)
library(ggplot2)
library(Hmisc)
library(party)
set.seed(1234)
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
View(creditData)
na_count <-function (x) sapply(x, function(y) sum(is.na(y)))
na_count(creditData)
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
View(creditData)
creditData[-c(5000:15000),] -> creditData1
na_count(creditData1)
creditData1[-c(164764:174700),] -> creditData1
View(creditData1)
table(creditData1$Class)
table(creditData$Class)
creditData1[-c(224764:226700),] -> creditData1
View(creditData1)
creditData1[-c(163013:183013),] -> creditData1
View(creditData1)
table(creditData$Class)
table(creditData1$Class)
write.csv(creditData1,"C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
table(creditData$Class)
View(creditData)
creditData[-c(167750:187750),] -> creditData
table(creditData$Class)
write.csv(creditData1,"C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData<-creditData[,-1]
table(creditData$Class)
na_count(creditData)
creditData[-c(150000:160000),] -> creditData
View(creditData)
creditData[-c(210000:220000),] -> creditData
View(creditData)
creditData[-c(5000:20000),] -> creditData
View(creditData)
table(creditData$Class)
write.csv(creditData,"C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
View(creditData)
creditData<-creditData[,-1]
View(creditData)
table(creditData$Class)
na_count(creditData)
creditData[-c(47000:57000),] -> creditData
View(creditData)
table(creditData$Class)
creditData[-c(147000:157000),] -> creditData
View(creditData)
write.csv(creditData,"C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
View(creditData)
na_count(creditData)
creditData <- creditData[,-1]
View(creditData)
table(creditData$Class)
creditData[-c(117000:127000),] -> creditData
creditData[-c(17000:27000),] -> creditData
View(creditData)
table(creditData$Class)
write.csv(creditData,"C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
View(creditData)
creditData<-creditData[,-1]
View(creditData)
table(creditData$Class)
creditData[-c(63000:68000),] -> creditData
table(creditData$Class)
creditData[-c(153000:158000),] -> creditData
table(creditData$Class)
creditData[-c(22000:33000),] -> creditData
table(creditData$Class)
View(creditData)
write.csv(creditData,"C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
View(creditData)
creditData <- creditData[,-1]
View(creditData)
table(creditData$Class)
creditData$Class <- as.factor(creditData$Class)
train <- creditData[1:70000, ]
test <- creditData[70001:141998, ]
table(train$Class)
table(test$Class)
train <- creditData[1:90000, ]
test <- creditData[90001:141998, ]
table(test$Class)
table(train$Class)
train <- creditData[1:90000, ]
test <- creditData[90001:141998, ]
train %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
#count of class in train set
test %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
rfModel <- randomForest(Class ~ . , data = train)
train <- creditData[1:20000, ]
rfModel <- randomForest(Class ~ . , data = train)
creditData[0:50000,] -> creditData1
View(creditData1)
table(creditData1$Class)
table(train$Class)
creditData[0:37000,] -> creditData1
table(creditData1$Class)
creditData[0:20000,] -> creditData1
View(creditData1)
train <- creditData[1:15000, ]
test <- creditData[15001:20000, ]
table(train$Class)
table(test$Class)
train %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
#count of class in train set
test %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
rfModel <- randomForest(Class ~ . , data = train)
train %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
#count of class in train set
test %>%
select(Class) %>%
group_by(Class) %>%
summarise(count = n()) %>%
glimpse
write.csv(creditData1,"C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
creditData <- read_csv("C:/Users/Intellipaat-Ashwin/Desktop/October/creditcard/creditcard.csv")
View(creditData)
table(creditData$Class)
creditData$Class <- as.factor(creditData$Class)
train <- creditData[1:15000, ]
test <- creditData[15001:20000, ]
table(train$Class)
table(test$Class)
rfModel <- randomForest(Class ~ . , data = train)
View(test)
test$predicted <- predict(rfModel, test)
table(test$Class,test$predicted)
library(caret)
confusionMatrix(test$Class, test$predicted)
install.packages("e1071")
library(caret)
confusionMatrix(test$Class, test$predicted)
library(MLmetrics)
install.packages("MLmetrics")
F1_all <- F1_Score(test$Class, test$predicted)
F1_all
library(MLmetrics)
F1_all <- F1_Score(test$Class, test$predicted)
F1_all
options(repr.plot.width=5, repr.plot.height=4)
varImpPlot(rfModel,
sort = T,
n.var=10,
main="Top 10 Most Important Variables")
rfModelTrim1 <- randomForest(Class ~  V17,
data = train)
test$predictedTrim1 <- predict(rfModelTrim1, test)
View(test)
confusionMatrix(test$Class, test$predictedTrim1)
F1_1 <- F1_Score(test$Class, test$predictedTrim1)
F1_1
F1_all
rfModelTrim2 <- randomForest(Class ~  V17 + V14,
data = train)
test$predictedTrim2 <- predict(rfModelTrim2, test)
F1_2 <- F1_Score(test$Class, test$predictedTrim2)
F1_2
F1_1
F1_all
rfModelTrim3 <- randomForest(Class ~  V17 + V14 + Time,
data = train)
test$predictedTrim3 <- predict(rfModelTrim3, test)
F1_3 <- F1_Score(test$Class, test$predictedTrim3)
F1_3
ncol(creditData)
numVariables <- c(1,2,3,30)
F1_Score <- c(F1_1, F1_2, F1_3, F1_all)
variablePerf <- data.frame(numVariables, F1_Score)
View(variablePerf)
ggplot(variablePerf, aes(numVariables, F1_Score)) + geom_point() + labs(x = "Number of Variables", y = "F1 Score", title = "F1 Score Performance")
ggplot(variablePerf, aes(numVariables, F1_Score)) + geom_point() +geom_line() + labs(x = "Number of Variables", y = "F1 Score", title = "F1 Score Performance")
